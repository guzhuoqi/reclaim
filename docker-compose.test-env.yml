services:
  attestor:
    build:
      context: ./attestor-core
      dockerfile: ./attestor.dockerfile
      args:
        # 如需从私有 Git 仓库获取依赖，可在本地导出 GL_TOKEN 环境变量后构建
        GL_TOKEN: ${GL_TOKEN:-}
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - ATTESTOR_PORT=8001
      - DISABLE_BGP_CHECKS=1
      - PRIVATE_KEY=${PRIVATE_KEY:-0x0123788edad59d7c013cdc85e4372f350f828e2cec62d9a2de4560e69aec7f89}
    ports:
      - "18001:8001"
    restart: unless-stopped

  mitm:
    build:
      context: ./
      dockerfile: ./mitmproxy2swagger/mitmproxy_addons/Dockerfile
      args:
        # 确保在镜像构建阶段完成 attestor-core 的安装与构建
        SKIP_ATTESTOR_BUILD: "false"
        USE_PREBUILT_LIB: "false"
    working_dir: /opt/reclaim/mitmproxy2swagger/mitmproxy_addons
    volumes:
      # 仅共享运行期数据（会话、索引、attestor_db、日志），不共享源码
      - mitm_data:/opt/reclaim/mitmproxy2swagger/mitmproxy_addons/data
      # 共享 main-flow 的 data 目录，供 provider_query.py 访问
      - mitm_data:/app/main-flow/data
    environment:
      - PYTHONUNBUFFERED=1
      # Force addon to use local Node.js script mode
      - USE_WSS_ATTESTOR=false
      - ATTESTOR_HOST_PORT=local
      # 指定 main-flow 数据目录路径
      - MAIN_FLOW_DATA_DIR=/app/main-flow/data
    depends_on:
      - attestor
    ports:
      - "31080:8080"
      - "8082:8082"
      - "8083:8083"
    restart: unless-stopped

  mainflow:
    build:
      context: ./
      dockerfile: ./mitmproxy2swagger/main-flow/Dockerfile
    working_dir: /app/main-flow
    volumes:
      # 与 mitm 共享 data 目录，使 mainflow 写入的 task_sessions 被 mitm 读取
      - mitm_data:/app/mitmproxy_addons/data
      # 共享 main-flow 的 data 目录
      - mitm_data:/app/main-flow/data
    environment:
      - API_SERVER_HOST=0.0.0.0
      - API_SERVER_PORT=8000
      - MITM_HOST=mitm
      - MITM_PORT=8083
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    depends_on:
      - mitm
    restart: unless-stopped

networks:
  default:
    name: reclaim-test-env

volumes:
  mitm_data:
    driver: local
  mainflow_data:
    driver: local


